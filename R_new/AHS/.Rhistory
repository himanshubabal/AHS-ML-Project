require(foreign)
require(nnet)
require(ggplot2)
require(reshape2)
filename = "/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_hotData_with_0_subset_2_way_stars.csv"
data = read.csv(paste(filename,".csv", sep = ""), header = TRUE, sep = ",") # replace the string by filename of subset file
y = read.csv("/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_col_with_0.csv", header = TRUE, sep = ",") #
data
y
data_csv = read.csv(paste(filename, sep = ""), header = TRUE, sep = ",")
data_csv.shape
data_csv
data_comb = cbind(data_csv, y)
model = multinom(diagnosed_for~., data_comb, MaxNWts = 4000)
d = summary(model)
model
print(model)
d = summary(model)
library(broom)
install,install.packages(broom)
install,install.packages('broom')
install.packages('broom')
install.packages('broom')
Sys.getenv("http_proxy")
Sys.setenv(http_proxy="")
Sys.getenv("http_proxy")
install.packages('broom')
Sys.getenv("https_proxy")
Sys.setenv(https_proxy="")
Sys.getenv("https_proxy")
install.packages('broom')
install.packages("broom")
library(broom)
require(foreign)
require(nnet)
require(ggplot2)
require(reshape2)
filename = "/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_hotData_with_0_subset_2_way_stars.csv"
data_csv = read.csv(paste(filename, sep = ""), header = TRUE, sep = ",")
y = read.csv("/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_col_with_0.csv", header = TRUE, sep = ",")
data_comb = cbind(data_csv, y)
model = multinom(diagnosed_for~., data_comb, MaxNWts = 4000)
tidy(model)
glance(model)
glance(model)$p.value
model
clear
summary(model)$r.squared
require(broom)
glance(model)$p.value
d = summary(model)
y = read.csv("/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_col_with_0.csv", header = TRUE, sep = ",") #
#name of the subset file used for creating the model
filename = "/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_hotData_with_0.csv"
data = read.csv(paste(filename, sep = ""), header = TRUE, sep = ",") # replace the string by filename of subset file
y = read.csv("/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_col_with_0.csv", header = TRUE, sep = ",") #
data_comb = cbind(data, y)
model = lm("diagnosed_for~.", data_comb)
# sink("results.txt")
summary(model)
# sink()
filename = "/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_hotData_with_0.csv"
data = read.csv(paste(filename, sep = ""), header = TRUE, sep = ",") # replace the string by filename of subset file
y = read.csv("/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_col_with_0.csv", header = TRUE, sep = ",") #
data_comb = cbind(data, y)
model = lm("diagnosed_for~1", data_comb)
summary(model)
y
y[y==1]
y
y[y==1]
y[y!=1] = 0
y
y = read.csv("/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_col_with_0.csv", header = TRUE, sep = ",") #
label = 1
y[y == label] = 1
y[y != label] = 0
y[y!=1] = 0
data_comb = cbind(data, y)
model = lm("diagnosed_for~.", data_comb)
summary(model)
plot(data,y)
model = lm(y ~ data)
model = lm("diagnosed_for~.", data_comb)
diag_col =
/
diag_col = data_comb['diagnosed_for']
diag_col
diag_col = data_comb['diagnosed_for']
summary(model)
diag_col = data_comb['diagnosed_for']
toilet_1 = data_comb['toilet_used_1.0']
plot(toilet_1, diag_col)
plot(data_comb$diagnosed_for, data_comb$toilet_used_1.0)
full_data = read.csv("/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_Clean.csv", header = TRUE, sep = ",")
cold = read.csv("/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_coldData_with_0", header = TRUE, sep = ",")
cold = read.csv("/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_coldData_with_0.csv", header = TRUE, sep = ",")
cold_full = cbind(cold, y)
plot(cold_full$diagnosed_for, cold_full$toilet_used)
y = read.csv("/Users/himanshubabal/Desktop/AHS-ML-Project/data/22/22_AHS_COMB_diag_col_with_0.csv", header = TRUE, sep = ",") #
cold_full = cbind(cold, y)
plot(cold_full$diagnosed_for, cold_full$toilet_used)
View(full_data)
